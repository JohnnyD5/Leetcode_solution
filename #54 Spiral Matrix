Just take data in spiral order
it first goes right, then down ,then left, and then up
The only thing needs to caution is that left and up are not necessary every step.

e.g:
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15

FIRST iteration:
Upon right: 1 2 3 4 5
Upon down: 10 15
Upon left: 14 13 12 11
Upon up: 6

Second Iteration:
Upon right: 7 8 9
down: NA
left: fails if
up: fails if

from math import ceil
class Solution:
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        if not matrix:
            return []
        res = []
        m, n = len(matrix), len(matrix[0])
        for i in range(min(ceil(m/2),ceil(n/2))):
            #right
            for j in range(i,n-i):
                res.append(matrix[i][j])
            #down
            for j in range(i+1,m-i):
                res.append(matrix[j][n-i-1])
            #left
            if m-i-1 != i:
                for j in range(n-i-2,i-1,-1):
                    res.append(matrix[m-i-1][j])
            #up
            if n-i-1 != i:
                for j in range(m-i-2,i,-1):
                    res.append(matrix[j][i])
        return res
